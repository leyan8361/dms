<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="dms.dao.PlanDao">

	<!-- 获取线路列表 -->
	<select id="getLineList" resultType="line">
		select id,lineNo
		from t_line
		where isShow = 'show'
	</select>

	<!-- 获取线路下车站列表 -->
	<select id="getLineStationList" parameterType="String" resultType="lineStation">
		select id,lineId,station
		from t_line_station
		where isShow = 'show' and lineId = #{lineId}
	</select>
	
	<!-- 校验预案名称是否重复 -->
	<select id="checkPlanName" parameterType="String" resultType="plan">
		select *
		from t_plan
		where isShow = 'show' and name = #{name}
	</select>
	
	<!-- 添加预案 -->
	<insert id="addPlan" parameterType="plan" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into
		t_plan
		(name,lineId,lineNo,stationId,stationName)
		values
		(#{name},#{lineId},#{lineNo},#{stationId},#{stationName})
	</insert>
	
	<!-- 添加预案附件 -->
	<insert id="addPlanAttach" parameterType="List">
		insert into
		t_planattach
		(planId,path)
		values
		<foreach collection="list" item="pa" separator=",">
			(#{pa.planId},#{pa.path})
		</foreach>
	</insert>
	
	<!-- 查询预案列表 -->
	<select id="getPlanList" resultType="plan">
		select id,name,lineId,lineNo,stationId,stationName
		from t_plan
		where isShow = 'show'
		<if test="lineId!=''">
			and lineId = #{lineId}
		</if>
		<if test="stationId!=''">
			and stationId = #{stationId}
		</if>
		<if test="name!=''">
			and name = #{name}
		</if>
		order by id desc
	</select>
	
	<!-- 查询预案详情 -->
    <select id="getPlanInfo" parameterType="int" resultMap="planAttachMap">
		select 
		t1.id,t1.name,t1.lineId,t1.lineNo,t1.stationId,t1.stationName,t2.id as attachId,t2.path
		from t_plan t1,t_planattach t2
		where t1.isShow = 'show' and t1.id = #{id} and t1.id = t2.planId and t2.isShow = 'show'
	</select>
	
	<resultMap type="plan" id="planAttachMap">
		 <id column="id" property="id" />
		 <result column="name" property="name" />
		 <result column="lineId" property="lineId" />
		 <result column="lineNo" property="lineNo" />
		 <result column="stationId" property="stationId" />
		 <result column="stationName" property="stationName" />
		 <collection property="lpa" ofType="planAttach" column="id">
		 	<id column="attachId" property="id" />
		 	<result column="path" property="path" />
		 </collection>
	</resultMap>
	
	<!-- 删除预案的附件 -->
	<update id="delPlanAttach" parameterType="String">
		update t_planattach
		set isShow = 'notShow'
		where id ${str}
	</update>
	
	<!-- 编辑预案信息 -->
	<update id="updatePlanInfo">
		update t_plan
		set name = #{name},lineId = #{lineId},lineNo = #{lineNo},stationId = #{stationId},stationName = #{stationName}
		where id = #{id}
	</update>
	
	<!-- 删除预案 -->
	<update id="delPlan" parameterType="int">
		update t_plan
		set isShow = 'notShow'
		where id = #{id}
	</update>
	
	<!-- 新增流程库表 -->
	<insert id="addProcess" parameterType="process" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into 
		t_process
		(name,creator,createDate)
		values
		(#{name},#{creator},#{createDate})
	</insert>
	
	<!-- 新增流程库表列信息 -->
	<insert id="addProcessColumn" parameterType="processColumn">
		insert into
		t_process_column
		(processId,name,type)
		values
		<foreach collection="list" item="pc" separator=",">
			(#{pc.processId},#{pc.name},#{pc.type})
		</foreach>
	</insert>
	
	<!-- 查询流程库表列表 -->
	<select id="getProcessList" resultType="process">
		select t1.id,t1.name,count(t2.id) as columnNum
		from t_process t1,t_process_column t2
		where t1.id = t2.processId and t1.isShow = 'show'
		group by t1.id
	</select>
	
	<!-- 查询流程库表详情 -->
	<select id="getProcessInfo" parameterType="int" resultMap="getProcessMap">
		select t1.id,t1.name,t2.id as cid,t2.name as cname,t2.type
		from t_process t1,t_process_column t2
		where t1.isShow = 'show' and t2.isShow = 'show' and t1.id = t2.processId and t1.id = #{id}
	</select>
	
	<resultMap type="process" id="getProcessMap">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<collection property="lpc" ofType="processColumn">
			<id column="cid" property="id" />
			<result column="cname" property="name" />
			<result column="type" property="type" />
		</collection>
	</resultMap>
	
	<!-- 修改流程库表信息 -->
	<update id="updateProcessInfo">
		update t_process
		set name = #{name}
		where id = #{id}
	</update>
	
	<!-- 修改流程库表列信息 -->
	<update id="updateProcessColumnInfo">
		update t_process_column
		set name = #{name}
		where id = #{id}
	</update>
	
	<!-- 删除流程库表信息 -->
	<update id="delProcess" parameterType="int">
		update t_process
		set isShow = 'notShow'
		where id = #{id}
	</update>
	
	<!-- 获取指定流程库表列名信息 -->
	<select id="getProcessColumnNameInfo" parameterType="String" resultType="processColumn">
		select id,name,type
		from t_process_column
		where isShow = 'show' and processId = #{id}
	</select>
	
	<!-- 添加流程库表内容 -->
	<insert id="addProcessContent" parameterType="processContent">
		insert into
		t_process_content
		(processId,columnId,flag,content)
		values
		<foreach collection="list" item="pc" separator=",">
			(#{pc.processId},#{pc.columnId},#{pc.flag},#{pc.content})
		</foreach>
	</insert>
	
	<!-- 修改流程库表内容 -->
	<update id="updateProcessContent">
		update t_process_content
		set content = #{content}
		where processId = #{processId} and columnId = #{columnId} and flag = #{flag}
	</update>
	
	<!-- 删除流程库表内容 -->
	<update id="delProcessContent">
		update t_process_content
		set isShow = 'notShow'
		where processId = #{processId} and flag = #{flag}
	</update>
</mapper>