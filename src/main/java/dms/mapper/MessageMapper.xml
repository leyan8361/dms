<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="dms.dao.MessageDao">

	<!-- 新增信息群 -->
	<insert id="addMessageGroup" parameterType="messageGroup" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into
		t_message_group
		(name,creator,createDate,type,effectiveDays)
		values
		(#{name},#{creator},#{createDate},#{type},#{effectiveDays})
	</insert>
	
	<!-- 新增信息群详情 -->
	<insert id="addMessageGroupDetail" parameterType="messageGroupDetail">
		insert into
		t_message_group_detail
		(groupId,userId,userName)
		values
		<foreach collection="list" item="mgd" separator=",">
			(#{mgd.groupId},#{mgd.userId},#{mgd.userName})
		</foreach>
	</insert>
	
	<!-- 获取所有员工信息 -->
	<select id="getAllUserInfo" resultType="userInfo">
		select
		id,userName
		from t_userinfo
		where isShow = 'show' and status = 0
	</select>
	
	<!-- 获取所有的消息群信息 -->
	<select id="getAllMessageGroupInfo" resultMap="getAllMessageGroupInfoMap">
		select  
		t1.id,t1.name,t1.type,t1.createDate,t1.effectiveDays,t2.userId,t2.userName
		from 
		(select * from t_message_group where isShow = 'show') t1
		left join 
		(select * from t_message_group_detail where isShow = 'show') t2
		on t1.id = t2.groupId
	</select>
	
	<resultMap type="messageGroup" id="getAllMessageGroupInfoMap">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="type" property="type" />
		<result column="createDate" property="createDate" />
		<result column="effectiveDays" property="effectiveDays" />
		<collection property="lmgd" ofType="messageGroupDetail">
			<result column="userId" property="userId" />
			<result column="userName" property="userName" />
		</collection>
	</resultMap>
	
	<!-- 修改消息群内容 -->
	<update id="updateMessageGroupInfo">
		update t_message_group
		set name = #{groupName}
		where id = #{groupId}
	</update>
	
	<!-- 删除消息群组人员 -->
	<update id="delGroupUserInfo">
		update t_message_group_detail
		set isShow = 'notShow'
		where groupId = #{groupId} and userId ${delStr}
	</update>
	
	<!-- 删除消息群 -->
	<update id="delMessageGroup" parameterType="int">
		update t_message_group
		set isShow = 'notShow'
		where id = #{groupId}
	</update>
	
	<!-- 发送消息 -->
	<insert id="sendMessage" parameterType="message">
		insert into
		t_message
		(fromId,toId,isGroupMessage,content,type,oriSendDate,sendDate,fileSize)
		values
		(#{fromId},#{toId},#{isGroupMessage},#{content},#{type},#{oriSendDate},#{sendDate},#{fileSize})
	</insert>
	
	<!-- 获取消息群成员列表 -->
	<select id="getGroupMembers" parameterType="int" resultType="String">
		select 
		userId 
		from t_message_group_detail
		where isShow = 'show' and groupId = #{groupId}
	</select>
	
	<!-- 获取消息群的信息 -->
	<select id="getGroupMessage" parameterType="int" resultType="message">
		select 
		t1.fromId,t1.toId,t1.content,t1.type,t1.sendDate,t1.fileSize,t2.userName as fromName
		from t_message t1,t_userinfo t2
		where t1.toId = #{groupId} and t1.isShow = 'show' and t1.isGroupMessage = 0 and t1.fromId = t2.id
		order by t1.sendDate asc
	</select>
	
	<!-- 获取接收到的消息列表 -->
	 <select id="getFromMessageList" parameterType="int" resultType="message">
		select 
		t1.fromId,t1.toId,t1.content,t1.type,t1.sendDate,t1.fileSize,t2.userName as fromName,t3.userName as toName
		from t_message t1,(select userName from t_userinfo where id = #{fromId}) t2,(select userName from t_userinfo where id = #{userId}) t3
		where t1.fromId = #{fromId} and t1.toId = #{userId} and t1.isShow = 'show' and t1.isGroupMessage = 1
		order by t1.sendDate asc
	</select> 
	
	<!-- 获取发送的消息列表 -->
	 <select id="getToMessageList" parameterType="int" resultType="message">
		select 
		t1.fromId,t1.toId,t1.content,t1.type,t1.sendDate,t1.fileSize,t2.userName as fromName,t3.userName as toName
		from t_message t1,(select userName from t_userinfo where id = #{userId}) t2,(select userName from t_userinfo where id = #{toId}) t3
		where t1.fromId = #{userId} and t1.toId = #{toId} and t1.isShow = 'show' and t1.isGroupMessage = 1
		order by t1.sendDate asc
	</select> 
</mapper>